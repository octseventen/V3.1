#CONFIGURASI GEOVPN LOADBALANCER [ xxx ]
global
    log /dev/log local0
    log /dev/log local1 notice
    daemon
    user haproxy
    group haproxy
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11

defaults
    log     global
    mode    tcp
    option  dontlognull
    timeout connect 5s
    timeout client  300s
    timeout server  300s

frontend ft_443
    bind *:443 ssl crt /etc/haproxy/hap.pem
    mode tcp
    option tcplog

    tcp-request inspect-delay 5s
    tcp-request content accept if { req.ssl_hello_type 1 }

    # Deteksi SSH dan Payload GET+Upgrade untuk SSH-WS
    acl is_ssh payload(0,7) -m bin 5353482d322e30
    acl is_get payload(0,4) -m sub GET
    acl has_upgrade payload(0,200) -m sub "Upgrade: websocket"

    # Tambahan: deteksi khusus WebSocket OVPN (wsovpn) dan gRPC
    acl is_wsovpn payload(0,200) -m sub "/wsovpn"
    acl is_grpc payload(0,200) -m sub "content-type: application/grpc"

    # Routing: jangan ubah urutan SSH dulu supaya fungsi lama tetap persis
    use_backend ssh_backend if is_ssh
    use_backend ssh_backend if is_get has_upgrade

    # Jika GET+Upgrade dan ada /wsovpn → ke backend wsovpn
    use_backend nginx_wsovpn if is_get has_upgrade is_wsovpn

    # Jika gRPC terdeteksi → ke backend gRPC
    use_backend nginx_grpc if is_grpc

    # Default selain SSH → ke nginx (xray)
    default_backend nginx_xray

frontend ft_80
    bind *:80
    mode tcp
    option tcplog

    # Deteksi SSH dan WS seperti biasa
    acl is_ssh payload(0,7) -m bin 5353482d322e30
    acl is_get payload(0,4) -m sub GET
    acl has_upgrade payload(0,200) -m sub "Upgrade: websocket"

    # Tambahan: deteksi wsovpn dan gRPC pada port 80 juga (non-SSL)
    acl is_wsovpn payload(0,200) -m sub "/wsovpn"
    acl is_grpc payload(0,200) -m sub "content-type: application/grpc"

    use_backend ssh_backend if is_ssh
    use_backend ssh_backend if is_get has_upgrade

    use_backend nginx_wsovpn if is_get has_upgrade is_wsovpn
    use_backend nginx_grpc if is_grpc

    default_backend nginx_xray

backend ssh_backend
    mode tcp
    server dropbear1 127.0.0.1:109 check

backend nginx_xray
    mode tcp
    server nginx1 127.0.0.1:1010 send-proxy check

# Backend untuk WebSocket OpenVPN (/wsovpn → nginx:1012)
backend nginx_wsovpn
    mode tcp
    option tcplog
    # send-proxy supaya nginx mengenali PROXY protocol
    server nginx_wsovpn 127.0.0.1:1012 send-proxy check

# Backend untuk gRPC (nginx:1013)
backend nginx_grpc
    mode tcp
    option tcplog
    server nginx_grpc 127.0.0.1:1013 send-proxy check
